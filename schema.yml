openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/fare-histogram/:
    get:
      operationId: fare_histogram_retrieve
      tags:
      - fare-histogram
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/passenger/:
    get:
      operationId: passenger_list
      tags:
      - passenger
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Passenger'
          description: ''
    post:
      operationId: passenger_create
      tags:
      - passenger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Passenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Passenger'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
  /api/passenger/{PassengerId}/:
    get:
      operationId: passenger_retrieve
      parameters:
      - in: path
        name: PassengerId
        schema:
          type: integer
        required: true
      tags:
      - passenger
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    put:
      operationId: passenger_update
      parameters:
      - in: path
        name: PassengerId
        schema:
          type: integer
        required: true
      tags:
      - passenger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Passenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Passenger'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    patch:
      operationId: passenger_partial_update
      parameters:
      - in: path
        name: PassengerId
        schema:
          type: integer
        required: true
      tags:
      - passenger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    delete:
      operationId: passenger_destroy
      parameters:
      - in: path
        name: PassengerId
        schema:
          type: integer
        required: true
      tags:
      - passenger
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Passenger:
      type: object
      properties:
        PassengerId:
          type: integer
        Survived:
          type: boolean
        Pclass:
          type: integer
        Name:
          type: string
          maxLength: 200
        Sex:
          $ref: '#/components/schemas/SexEnum'
        Age:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        SibSp:
          type: integer
        Parch:
          type: integer
        Ticket:
          type: string
          maxLength: 20
        Fare:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
        Cabin:
          type: string
          nullable: true
          maxLength: 20
        Embarked:
          type: string
          nullable: true
          maxLength: 1
      required:
      - Fare
      - Name
      - Parch
      - PassengerId
      - Pclass
      - Sex
      - SibSp
      - Survived
      - Ticket
    PatchedPassenger:
      type: object
      properties:
        PassengerId:
          type: integer
        Survived:
          type: boolean
        Pclass:
          type: integer
        Name:
          type: string
          maxLength: 200
        Sex:
          $ref: '#/components/schemas/SexEnum'
        Age:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        SibSp:
          type: integer
        Parch:
          type: integer
        Ticket:
          type: string
          maxLength: 20
        Fare:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
        Cabin:
          type: string
          nullable: true
          maxLength: 20
        Embarked:
          type: string
          nullable: true
          maxLength: 1
    SexEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
